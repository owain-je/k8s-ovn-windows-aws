{
    "version": 3,
    "terraform_version": "0.9.11",
    "serial": 126,
    "lineage": "10b12b49-991d-4b32-b241-6efacb298fca",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_autoscaling_group.gateway-asg": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_elb.gateway",
                        "aws_launch_configuration.gateway-lc",
                        "aws_subnet.Nodes"
                    ],
                    "primary": {
                        "id": "venus.je-gateway",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:eu-west-1:375012098440:autoScalingGroup:6801c0ac-6b31-4c70-bf22-6a91bddbe91b:autoScalingGroupName/venus.je-gateway",
                            "availability_zones.#": "1",
                            "availability_zones.3953592328": "eu-west-1a",
                            "default_cooldown": "300",
                            "desired_capacity": "1",
                            "force_delete": "true",
                            "health_check_grace_period": "300",
                            "health_check_type": "EC2",
                            "id": "venus.je-gateway",
                            "launch_configuration": "venus.je-gateway-0000468ff120b820741ba97b13",
                            "load_balancers.#": "1",
                            "load_balancers.1897696012": "gateway-elb",
                            "max_size": "1",
                            "metrics_granularity": "1Minute",
                            "min_size": "1",
                            "name": "venus.je-gateway",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "suspended_processes.#": "0",
                            "tag.#": "1",
                            "tag.111485639.key": "Name",
                            "tag.111485639.propagate_at_launch": "true",
                            "tag.111485639.value": "venus.je-gateway",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "1",
                            "vpc_zone_identifier.2427912626": "subnet-7c167235",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_autoscaling_group.master-linux-asg": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_launch_configuration.master-linux-lc",
                        "aws_subnet.MasterNodes"
                    ],
                    "primary": {
                        "id": "venus.je-master-linux",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:eu-west-1:375012098440:autoScalingGroup:3f67c9bf-5d96-4d67-be35-7dfe21492ffc:autoScalingGroupName/venus.je-master-linux",
                            "availability_zones.#": "1",
                            "availability_zones.3953592328": "eu-west-1a",
                            "default_cooldown": "300",
                            "desired_capacity": "1",
                            "force_delete": "true",
                            "health_check_grace_period": "300",
                            "health_check_type": "EC2",
                            "id": "venus.je-master-linux",
                            "launch_configuration": "venus.je-master-linux-00d7c993a12825ff4b4cdc8c65",
                            "load_balancers.#": "0",
                            "max_size": "1",
                            "metrics_granularity": "1Minute",
                            "min_size": "1",
                            "name": "venus.je-master-linux",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "suspended_processes.#": "0",
                            "tag.#": "1",
                            "tag.4130107837.key": "Name",
                            "tag.4130107837.propagate_at_launch": "true",
                            "tag.4130107837.value": "venus.je-master-linux",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "1",
                            "vpc_zone_identifier.2297486457": "subnet-a90a6ee0",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_autoscaling_group.node-linux-asg": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_launch_configuration.node-linux-lc",
                        "aws_subnet.Nodes"
                    ],
                    "primary": {
                        "id": "venus.je-node-linux",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:eu-west-1:375012098440:autoScalingGroup:13b03187-dd9c-49e5-9775-3825c6a2e7db:autoScalingGroupName/venus.je-node-linux",
                            "availability_zones.#": "1",
                            "availability_zones.3953592328": "eu-west-1a",
                            "default_cooldown": "300",
                            "desired_capacity": "1",
                            "force_delete": "true",
                            "health_check_grace_period": "300",
                            "health_check_type": "EC2",
                            "id": "venus.je-node-linux",
                            "launch_configuration": "venus.je-node-linux-0000468ff120b820741ba97b14",
                            "load_balancers.#": "0",
                            "max_size": "1",
                            "metrics_granularity": "1Minute",
                            "min_size": "1",
                            "name": "venus.je-node-linux",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "suspended_processes.#": "0",
                            "tag.#": "1",
                            "tag.2834972337.key": "Name",
                            "tag.2834972337.propagate_at_launch": "true",
                            "tag.2834972337.value": "venus.je-node-linux",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "1",
                            "vpc_zone_identifier.2427912626": "subnet-7c167235",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_autoscaling_group.node-windows-asg": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_launch_configuration.node-windows-lc",
                        "aws_subnet.Nodes"
                    ],
                    "primary": {
                        "id": "venus.je-node-windows",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:eu-west-1:375012098440:autoScalingGroup:f6663542-58e2-462a-832c-76390e681a39:autoScalingGroupName/venus.je-node-windows",
                            "availability_zones.#": "1",
                            "availability_zones.3953592328": "eu-west-1a",
                            "default_cooldown": "300",
                            "desired_capacity": "4",
                            "force_delete": "true",
                            "health_check_grace_period": "300",
                            "health_check_type": "EC2",
                            "id": "venus.je-node-windows",
                            "launch_configuration": "venus.je-node-windows-00c05a58c27d5061994224603f",
                            "load_balancers.#": "0",
                            "max_size": "4",
                            "metrics_granularity": "1Minute",
                            "min_size": "4",
                            "name": "venus.je-node-windows",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "suspended_processes.#": "0",
                            "tag.#": "1",
                            "tag.497579499.key": "Name",
                            "tag.497579499.propagate_at_launch": "true",
                            "tag.497579499.value": "venus.je-node-windows",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "1",
                            "vpc_zone_identifier.2427912626": "subnet-7c167235",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_eip.forNat": {
                    "type": "aws_eip",
                    "depends_on": [],
                    "primary": {
                        "id": "eipalloc-146a492e",
                        "attributes": {
                            "association_id": "eipassoc-ae795893",
                            "domain": "vpc",
                            "id": "eipalloc-146a492e",
                            "instance": "",
                            "network_interface": "eni-885ce4b7",
                            "private_ip": "10.111.1.165",
                            "public_ip": "34.250.25.85",
                            "vpc": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_elb.gateway": {
                    "type": "aws_elb",
                    "depends_on": [
                        "aws_security_group.elb",
                        "aws_subnet.PublicAZA"
                    ],
                    "primary": {
                        "id": "gateway-elb",
                        "attributes": {
                            "access_logs.#": "0",
                            "availability_zones.#": "1",
                            "availability_zones.3953592328": "eu-west-1a",
                            "connection_draining": "true",
                            "connection_draining_timeout": "400",
                            "cross_zone_load_balancing": "true",
                            "dns_name": "gateway-elb-1189169813.eu-west-1.elb.amazonaws.com",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "2",
                            "health_check.0.interval": "5",
                            "health_check.0.target": "TCP:30080",
                            "health_check.0.timeout": "3",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "gateway-elb",
                            "idle_timeout": "400",
                            "instances.#": "1",
                            "instances.1377902071": "i-09f868a61f3ebc6da",
                            "internal": "false",
                            "listener.#": "1",
                            "listener.1672639984.instance_port": "30080",
                            "listener.1672639984.instance_protocol": "http",
                            "listener.1672639984.lb_port": "80",
                            "listener.1672639984.lb_protocol": "http",
                            "listener.1672639984.ssl_certificate_id": "",
                            "name": "gateway-elb",
                            "security_groups.#": "1",
                            "security_groups.502355716": "sg-4b307a33",
                            "source_security_group": "375012098440/venus.je-elb-gateway",
                            "source_security_group_id": "sg-4b307a33",
                            "subnets.#": "1",
                            "subnets.732643051": "subnet-29147060",
                            "tags.%": "0",
                            "zone_id": "Z32O12XQLNTSW2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.bastion-nodes-profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.bastion-nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-bastion-nodes-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:instance-profile/venus.je-bastion-nodes-profile",
                            "id": "venus.je-bastion-nodes-profile",
                            "name": "venus.je-bastion-nodes-profile",
                            "path": "/",
                            "role": "venus.je-bastion-role",
                            "roles.#": "1",
                            "roles.3125627340": "venus.je-bastion-role",
                            "unique_id": "AIPAI533CFAYGN2U6HHDM"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.gateway-nodes-profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.gateway-nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-gateway-nodes-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:instance-profile/venus.je-gateway-nodes-profile",
                            "id": "venus.je-gateway-nodes-profile",
                            "name": "venus.je-gateway-nodes-profile",
                            "path": "/",
                            "role": "venus.je-gateway-role",
                            "roles.#": "1",
                            "roles.1549015536": "venus.je-gateway-role",
                            "unique_id": "AIPAIXF5NPAZAKSC4PEBC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.gateway-profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.master-nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-gateway-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:instance-profile/venus.je-gateway-profile",
                            "id": "venus.je-gateway-profile",
                            "name": "venus.je-gateway-profile",
                            "path": "/",
                            "role": "venus.je-master-role",
                            "roles.#": "1",
                            "roles.3006779497": "venus.je-master-role",
                            "unique_id": "AIPAJPYFD6AFJJCJPQBEO"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.master-nodes-profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.master-nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-master-nodes-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:instance-profile/venus.je-master-nodes-profile",
                            "id": "venus.je-master-nodes-profile",
                            "name": "venus.je-master-nodes-profile",
                            "path": "/",
                            "role": "venus.je-master-role",
                            "roles.#": "1",
                            "roles.3006779497": "venus.je-master-role",
                            "unique_id": "AIPAJNRA64SZVF4TDJLEW"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.nodes-profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-nodes-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:instance-profile/venus.je-nodes-profile",
                            "id": "venus.je-nodes-profile",
                            "name": "venus.je-nodes-profile",
                            "path": "/",
                            "role": "venus.je-nodes-role",
                            "roles.#": "1",
                            "roles.1884259662": "venus.je-nodes-role",
                            "unique_id": "AIPAJFYM44VLIKDGYSGWY"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.bastion-nodes-iam": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-bastion-role",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:role/venus.je-bastion-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-08-30T14:40:25Z",
                            "id": "venus.je-bastion-role",
                            "name": "venus.je-bastion-role",
                            "path": "/",
                            "unique_id": "AROAIF75JEK5N5HHPXXPG"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.gateway-nodes-iam": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-gateway-role",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:role/venus.je-gateway-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-09-01T10:17:15Z",
                            "id": "venus.je-gateway-role",
                            "name": "venus.je-gateway-role",
                            "path": "/",
                            "unique_id": "AROAIEPQ5FIQWLORQDE7E"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.master-nodes-iam": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-master-role",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:role/venus.je-master-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-08-30T14:40:25Z",
                            "id": "venus.je-master-role",
                            "name": "venus.je-master-role",
                            "path": "/",
                            "unique_id": "AROAJ36V4QP7NEILND6SG"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.nodes-iam": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-nodes-role",
                        "attributes": {
                            "arn": "arn:aws:iam::375012098440:role/venus.je-nodes-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-08-30T14:40:25Z",
                            "id": "venus.je-nodes-role",
                            "name": "venus.je-nodes-role",
                            "path": "/",
                            "unique_id": "AROAITONJ4KSO3MGTH4I4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.gateway-nodes_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.gateway-nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-gateway-role:s3-rw-state",
                        "attributes": {
                            "id": "venus.je-gateway-role:s3-rw-state",
                            "name": "s3-rw-state",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:Get*\",\n                \"s3:List*\",\n                \"s3:Put*\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::venus.je-k8s-state/*\",\n                \"arn:aws:s3:::venus.je-k8s-state\"\n            ]\n        },\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetBucketLocation\",\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::venus.je-k8s-state\"\n            ]\n        }\n    ]\n}\n",
                            "role": "venus.je-gateway-role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.master-nodes_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.master-nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-master-role:s3-rw-state",
                        "attributes": {
                            "id": "venus.je-master-role:s3-rw-state",
                            "name": "s3-rw-state",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:Get*\",\n                \"s3:List*\",\n                \"s3:Put*\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::venus.je-k8s-state/*\",\n                \"arn:aws:s3:::venus.je-k8s-state\"\n            ]\n        },\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetBucketLocation\",\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::venus.je-k8s-state\"\n            ]\n        }\n    ]\n}\n",
                            "role": "venus.je-master-role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.nodes_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.nodes-iam"
                    ],
                    "primary": {
                        "id": "venus.je-nodes-role:s3-read-state",
                        "attributes": {
                            "id": "venus.je-nodes-role:s3-read-state",
                            "name": "s3-read-state",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::venus.je-k8s-state/*\",\n                \"arn:aws:s3:::venus.je-k8s-state\"\n            ]\n        },\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetBucketLocation\",\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::venus.je-k8s-state\"\n            ]\n        }\n    ]\n}",
                            "role": "venus.je-nodes-role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.bastion-linux": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_security_group.Bastion-Linux",
                        "aws_subnet.PublicAZA"
                    ],
                    "primary": {
                        "id": "i-002b7ca1f6a866499",
                        "attributes": {
                            "ami": "ami-785db401",
                            "associate_public_ip_address": "true",
                            "availability_zone": "eu-west-1a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "",
                            "id": "i-002b7ca1f6a866499",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "venus.je",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-805de5bf",
                            "primary_network_interface_id": "eni-805de5bf",
                            "private_dns": "ip-10-111-1-242.eu-west-1.compute.internal",
                            "private_ip": "10.111.1.242",
                            "public_dns": "ec2-34-253-208-67.eu-west-1.compute.amazonaws.com",
                            "public_ip": "34.253.208.67",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-29147060",
                            "tags.%": "1",
                            "tags.Name": "venus.je-bastion-linux",
                            "tenancy": "default",
                            "user_data": "d5ccf8adf6aedfb15700a80f2f0f4e0e32838b66",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.460973891": "sg-8c2763f4"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.bastion-win": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_security_group.Bastion-Win",
                        "aws_subnet.PublicAZA"
                    ],
                    "primary": {
                        "id": "i-09f9b8422bf910538",
                        "attributes": {
                            "ami": "ami-4763923e",
                            "associate_public_ip_address": "true",
                            "availability_zone": "eu-west-1a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "",
                            "id": "i-09f9b8422bf910538",
                            "instance_state": "running",
                            "instance_type": "t2.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "venus.je",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-3a5de505",
                            "primary_network_interface_id": "eni-3a5de505",
                            "private_dns": "ip-10-111-1-61.eu-west-1.compute.internal",
                            "private_ip": "10.111.1.61",
                            "public_dns": "ec2-54-171-175-79.eu-west-1.compute.amazonaws.com",
                            "public_ip": "54.171.175.79",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "30",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-29147060",
                            "tags.%": "1",
                            "tags.Name": "venus.je-bastion-windows",
                            "tenancy": "default",
                            "user_data": "d5ccf8adf6aedfb15700a80f2f0f4e0e32838b66",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.1485635278": "sg-8e2266f6"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_internet_gateway.gw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "igw-9e4370fa",
                        "attributes": {
                            "id": "igw-9e4370fa",
                            "tags.%": "1",
                            "tags.Name": "venus.je internet gw",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_key_pair.keypair": {
                    "type": "aws_key_pair",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je",
                        "attributes": {
                            "fingerprint": "08:34:ae:1b:58:7b:d5:93:3d:ed:1b:0e:8c:99:da:84",
                            "id": "venus.je",
                            "key_name": "venus.je",
                            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+bJaWjRRhj6SG/kzWB8J3ostt9g5WHfXQ0jkqUInBGa7xrcMZzG50rNAVcbSKdA5LNe2iRxioYRAs1sboypFh4i6ggoU6FyLgel76RBiN7emEfvWc/fDyXnxCZ8BFVjGzfRlm99bawDsvtk1TKQ5rCohy6QxhmJAwEQ1EVHnKlfTEMz+Mu33oozUlvS0zm0PwptlKK1cg2NW7B9hG5b5QHCtozlbm4a5hGxTZ5SGVSzY82LHAjIH3OKt95DXa1tcRHwuvjGyO1y6Ign3P4vaDl2cZk/kD1JfoKM7hF1tI3N0lFQpvIxKJNxuTu7k51D71SAYAWWTZRAVMDZDpHCu9 operry@887baa1826b0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.gateway-lc": {
                    "type": "aws_launch_configuration",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-gateway-0000468ff120b820741ba97b13",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "venus.je-gateway-profile",
                            "id": "venus.je-gateway-0000468ff120b820741ba97b13",
                            "image_id": "ami-785db401",
                            "instance_type": "t2.medium",
                            "key_name": "venus.je",
                            "name": "venus.je-gateway-0000468ff120b820741ba97b13",
                            "name_prefix": "venus.je-gateway-",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.106487556": "sg-3088c848",
                            "spot_price": "",
                            "user_data": "712f50854128aed5b12cdd5689b86ea58474f53f",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.master-linux-lc": {
                    "type": "aws_launch_configuration",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-master-linux-00d7c993a12825ff4b4cdc8c65",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "venus.je-master-nodes-profile",
                            "id": "venus.je-master-linux-00d7c993a12825ff4b4cdc8c65",
                            "image_id": "ami-785db401",
                            "instance_type": "t2.medium",
                            "key_name": "venus.je",
                            "name": "venus.je-master-linux-00d7c993a12825ff4b4cdc8c65",
                            "name_prefix": "venus.je-master-linux-",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.4273980149": "sg-2720645f",
                            "spot_price": "",
                            "user_data": "a26b90a1e27a57020074ccc49f646c93bbbc09a2",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.node-linux-lc": {
                    "type": "aws_launch_configuration",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-node-linux-0000468ff120b820741ba97b14",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "venus.je-nodes-profile",
                            "id": "venus.je-node-linux-0000468ff120b820741ba97b14",
                            "image_id": "ami-785db401",
                            "instance_type": "t2.medium",
                            "key_name": "venus.je",
                            "name": "venus.je-node-linux-0000468ff120b820741ba97b14",
                            "name_prefix": "venus.je-node-linux-",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.1674625231": "sg-2c410554",
                            "spot_price": "",
                            "user_data": "b91a6838f49999d4b52e54302cd9555777b1c19a",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_launch_configuration.node-windows-lc": {
                    "type": "aws_launch_configuration",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-node-windows-00c05a58c27d5061994224603f",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "venus.je-nodes-profile",
                            "id": "venus.je-node-windows-00c05a58c27d5061994224603f",
                            "image_id": "ami-4763923e",
                            "instance_type": "m4.large",
                            "key_name": "venus.je",
                            "name": "venus.je-node-windows-00c05a58c27d5061994224603f",
                            "name_prefix": "venus.je-node-windows-",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.1674625231": "sg-2c410554",
                            "spot_price": "",
                            "user_data": "afaa980b8b9824ddd31424ae416cc997d8d874ae",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_nat_gateway.PublicAZA": {
                    "type": "aws_nat_gateway",
                    "depends_on": [
                        "aws_eip.forNat",
                        "aws_internet_gateway.gw",
                        "aws_subnet.PublicAZA"
                    ],
                    "primary": {
                        "id": "nat-0659d05f81fe1f3dd",
                        "attributes": {
                            "allocation_id": "eipalloc-146a492e",
                            "id": "nat-0659d05f81fe1f3dd",
                            "network_interface_id": "eni-885ce4b7",
                            "private_ip": "10.111.1.165",
                            "public_ip": "34.250.25.85",
                            "subnet_id": "subnet-29147060"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_network_acl.all": {
                    "type": "aws_network_acl",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "acl-5e596439",
                        "attributes": {
                            "egress.#": "1",
                            "egress.2943206146.action": "allow",
                            "egress.2943206146.cidr_block": "0.0.0.0/0",
                            "egress.2943206146.from_port": "0",
                            "egress.2943206146.icmp_code": "0",
                            "egress.2943206146.icmp_type": "0",
                            "egress.2943206146.ipv6_cidr_block": "",
                            "egress.2943206146.protocol": "-1",
                            "egress.2943206146.rule_no": "2",
                            "egress.2943206146.to_port": "0",
                            "id": "acl-5e596439",
                            "ingress.#": "1",
                            "ingress.1564094202.action": "allow",
                            "ingress.1564094202.cidr_block": "0.0.0.0/0",
                            "ingress.1564094202.from_port": "0",
                            "ingress.1564094202.icmp_code": "0",
                            "ingress.1564094202.icmp_type": "0",
                            "ingress.1564094202.ipv6_cidr_block": "",
                            "ingress.1564094202.protocol": "-1",
                            "ingress.1564094202.rule_no": "1",
                            "ingress.1564094202.to_port": "0",
                            "subnet_ids.#": "0",
                            "tags.%": "1",
                            "tags.Name": "venus.je-open-acl",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table.private": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_nat_gateway.PublicAZA",
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "rtb-9c77b4fa",
                        "attributes": {
                            "id": "rtb-9c77b4fa",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.2152423877.cidr_block": "0.0.0.0/0",
                            "route.2152423877.egress_only_gateway_id": "",
                            "route.2152423877.gateway_id": "",
                            "route.2152423877.instance_id": "",
                            "route.2152423877.ipv6_cidr_block": "",
                            "route.2152423877.nat_gateway_id": "nat-0659d05f81fe1f3dd",
                            "route.2152423877.network_interface_id": "",
                            "route.2152423877.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "venus.je-Private",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table.public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.gw",
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "rtb-1275b674",
                        "attributes": {
                            "id": "rtb-1275b674",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.3048301035.cidr_block": "0.0.0.0/0",
                            "route.3048301035.egress_only_gateway_id": "",
                            "route.3048301035.gateway_id": "igw-9e4370fa",
                            "route.3048301035.instance_id": "",
                            "route.3048301035.ipv6_cidr_block": "",
                            "route.3048301035.nat_gateway_id": "",
                            "route.3048301035.network_interface_id": "",
                            "route.3048301035.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "venus.je-Public",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.MasterNodes": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.private",
                        "aws_subnet.MasterNodes"
                    ],
                    "primary": {
                        "id": "rtbassoc-9834f6e1",
                        "attributes": {
                            "id": "rtbassoc-9834f6e1",
                            "route_table_id": "rtb-9c77b4fa",
                            "subnet_id": "subnet-a90a6ee0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.Nodes": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.private",
                        "aws_subnet.Nodes"
                    ],
                    "primary": {
                        "id": "rtbassoc-0231f37b",
                        "attributes": {
                            "id": "rtbassoc-0231f37b",
                            "route_table_id": "rtb-9c77b4fa",
                            "subnet_id": "subnet-7c167235"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.PublicAZA": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.public",
                        "aws_subnet.PublicAZA"
                    ],
                    "primary": {
                        "id": "rtbassoc-b634f6cf",
                        "attributes": {
                            "id": "rtbassoc-b634f6cf",
                            "route_table_id": "rtb-1275b674",
                            "subnet_id": "subnet-29147060"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket.bucket": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "venus.je-k8s-state",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::venus.je-k8s-state",
                            "bucket": "venus.je-k8s-state",
                            "bucket_domain_name": "venus.je-k8s-state.s3.amazonaws.com",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z1BKCTXD74EZPE",
                            "id": "venus.je-k8s-state",
                            "logging.#": "0",
                            "region": "eu-west-1",
                            "request_payer": "BucketOwner",
                            "tags.%": "1",
                            "tags.Name": "venus.je-k8s-state",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket_object.install_k8s": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [],
                    "primary": {
                        "id": "files/install_k8s.ps1",
                        "attributes": {
                            "acl": "private",
                            "bucket": "venus.je-k8s-state",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "f8123e37939d48b155ebbe888ce9200b",
                            "id": "files/install_k8s.ps1",
                            "key": "files/install_k8s.ps1",
                            "server_side_encryption": "",
                            "source": "files/install_k8s.ps1",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket_object.install_ovn": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [],
                    "primary": {
                        "id": "files/install_ovn.ps1",
                        "attributes": {
                            "acl": "private",
                            "bucket": "venus.je-k8s-state",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "ea85989fc8e49fabad73ed4c0a76bd9f",
                            "id": "files/install_ovn.ps1",
                            "key": "files/install_ovn.ps1",
                            "server_side_encryption": "",
                            "source": "files/install_ovn.ps1",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.Bastion-Linux": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "sg-8c2763f4",
                        "attributes": {
                            "description": "bastion linux connections",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-8c2763f4",
                            "ingress.#": "1",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.protocol": "TCP",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "name": "venus.je-bastion-linux",
                            "owner_id": "375012098440",
                            "tags.%": "1",
                            "tags.Name": "venus.je-bastion-linux",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.Bastion-Win": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "sg-8e2266f6",
                        "attributes": {
                            "description": "bastion win connections",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-8e2266f6",
                            "ingress.#": "3",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.protocol": "TCP",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2223400681.cidr_blocks.#": "1",
                            "ingress.2223400681.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2223400681.from_port": "3389",
                            "ingress.2223400681.ipv6_cidr_blocks.#": "0",
                            "ingress.2223400681.protocol": "TCP",
                            "ingress.2223400681.security_groups.#": "0",
                            "ingress.2223400681.self": "false",
                            "ingress.2223400681.to_port": "3389",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.protocol": "TCP",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "name": "venus.je-bastion-win",
                            "owner_id": "375012098440",
                            "tags.%": "1",
                            "tags.Name": "venus.je-bastion-win",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.Gateway": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "sg-3088c848",
                        "attributes": {
                            "description": "gateway node connections",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-3088c848",
                            "ingress.#": "3",
                            "ingress.2263270181.cidr_blocks.#": "1",
                            "ingress.2263270181.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2263270181.from_port": "0",
                            "ingress.2263270181.ipv6_cidr_blocks.#": "0",
                            "ingress.2263270181.protocol": "TCP",
                            "ingress.2263270181.security_groups.#": "0",
                            "ingress.2263270181.self": "false",
                            "ingress.2263270181.to_port": "65000",
                            "ingress.2847896360.cidr_blocks.#": "1",
                            "ingress.2847896360.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2847896360.from_port": "0",
                            "ingress.2847896360.ipv6_cidr_blocks.#": "0",
                            "ingress.2847896360.protocol": "UDP",
                            "ingress.2847896360.security_groups.#": "0",
                            "ingress.2847896360.self": "false",
                            "ingress.2847896360.to_port": "65000",
                            "ingress.3068409405.cidr_blocks.#": "1",
                            "ingress.3068409405.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3068409405.from_port": "8",
                            "ingress.3068409405.ipv6_cidr_blocks.#": "0",
                            "ingress.3068409405.protocol": "icmp",
                            "ingress.3068409405.security_groups.#": "0",
                            "ingress.3068409405.self": "false",
                            "ingress.3068409405.to_port": "0",
                            "name": "venus.je-gateway",
                            "owner_id": "375012098440",
                            "tags.%": "1",
                            "tags.Name": "venus.je-gateway",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.Master-Linux": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "sg-2720645f",
                        "attributes": {
                            "description": "master linux connections",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-2720645f",
                            "ingress.#": "3",
                            "ingress.2263270181.cidr_blocks.#": "1",
                            "ingress.2263270181.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2263270181.from_port": "0",
                            "ingress.2263270181.ipv6_cidr_blocks.#": "0",
                            "ingress.2263270181.protocol": "TCP",
                            "ingress.2263270181.security_groups.#": "0",
                            "ingress.2263270181.self": "false",
                            "ingress.2263270181.to_port": "65000",
                            "ingress.2847896360.cidr_blocks.#": "1",
                            "ingress.2847896360.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2847896360.from_port": "0",
                            "ingress.2847896360.ipv6_cidr_blocks.#": "0",
                            "ingress.2847896360.protocol": "UDP",
                            "ingress.2847896360.security_groups.#": "0",
                            "ingress.2847896360.self": "false",
                            "ingress.2847896360.to_port": "65000",
                            "ingress.3068409405.cidr_blocks.#": "1",
                            "ingress.3068409405.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3068409405.from_port": "8",
                            "ingress.3068409405.ipv6_cidr_blocks.#": "0",
                            "ingress.3068409405.protocol": "icmp",
                            "ingress.3068409405.security_groups.#": "0",
                            "ingress.3068409405.self": "false",
                            "ingress.3068409405.to_port": "0",
                            "name": "venus.je-master-linux",
                            "owner_id": "375012098440",
                            "tags.%": "1",
                            "tags.Name": "venus.je-master-linux",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.Node": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "sg-2c410554",
                        "attributes": {
                            "description": "master node connections",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-2c410554",
                            "ingress.#": "3",
                            "ingress.2263270181.cidr_blocks.#": "1",
                            "ingress.2263270181.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2263270181.from_port": "0",
                            "ingress.2263270181.ipv6_cidr_blocks.#": "0",
                            "ingress.2263270181.protocol": "TCP",
                            "ingress.2263270181.security_groups.#": "0",
                            "ingress.2263270181.self": "false",
                            "ingress.2263270181.to_port": "65000",
                            "ingress.2847896360.cidr_blocks.#": "1",
                            "ingress.2847896360.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2847896360.from_port": "0",
                            "ingress.2847896360.ipv6_cidr_blocks.#": "0",
                            "ingress.2847896360.protocol": "UDP",
                            "ingress.2847896360.security_groups.#": "0",
                            "ingress.2847896360.self": "false",
                            "ingress.2847896360.to_port": "65000",
                            "ingress.3068409405.cidr_blocks.#": "1",
                            "ingress.3068409405.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3068409405.from_port": "8",
                            "ingress.3068409405.ipv6_cidr_blocks.#": "0",
                            "ingress.3068409405.protocol": "icmp",
                            "ingress.3068409405.security_groups.#": "0",
                            "ingress.3068409405.self": "false",
                            "ingress.3068409405.to_port": "0",
                            "name": "venus.je-node",
                            "owner_id": "375012098440",
                            "tags.%": "1",
                            "tags.Name": "venus.je-node",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.elb": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "sg-4b307a33",
                        "attributes": {
                            "description": "venus.je elb gateway security groups",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-4b307a33",
                            "ingress.#": "2",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2617001939.cidr_blocks.#": "1",
                            "ingress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2617001939.from_port": "443",
                            "ingress.2617001939.ipv6_cidr_blocks.#": "0",
                            "ingress.2617001939.protocol": "tcp",
                            "ingress.2617001939.security_groups.#": "0",
                            "ingress.2617001939.self": "false",
                            "ingress.2617001939.to_port": "443",
                            "name": "venus.je-elb-gateway",
                            "owner_id": "375012098440",
                            "tags.%": "0",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.MasterNodes": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "subnet-a90a6ee0",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "eu-west-1a",
                            "cidr_block": "10.111.2.0/24",
                            "id": "subnet-a90a6ee0",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "venus.je-MasterNodes",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.Nodes": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "subnet-7c167235",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "eu-west-1a",
                            "cidr_block": "10.111.3.0/24",
                            "id": "subnet-7c167235",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "venus.je-Nodes",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.PublicAZA": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.terraformmain"
                    ],
                    "primary": {
                        "id": "subnet-29147060",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "eu-west-1a",
                            "cidr_block": "10.111.1.0/24",
                            "id": "subnet-29147060",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "venus.je-Public",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_vpc.terraformmain": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-4c385c2b",
                        "attributes": {
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.111.0.0/16",
                            "default_network_acl_id": "acl-bc5d60db",
                            "default_route_table_id": "rtb-1575b673",
                            "default_security_group_id": "sg-5a266222",
                            "dhcp_options_id": "dopt-c046b9a7",
                            "enable_classiclink": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-4c385c2b",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-1575b673",
                            "tags.%": "1",
                            "tags.Name": "venus.je-K8s-cluster"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_vpc_dhcp_options.mydhcp": {
                    "type": "aws_vpc_dhcp_options",
                    "depends_on": [],
                    "primary": {
                        "id": "dopt-c046b9a7",
                        "attributes": {
                            "domain_name": "venus.internal",
                            "domain_name_servers.#": "1",
                            "domain_name_servers.0": "AmazonProvidedDNS",
                            "id": "dopt-c046b9a7",
                            "tags.%": "1",
                            "tags.Name": "internal dhcp option"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_vpc_dhcp_options_association.dns_resolver": {
                    "type": "aws_vpc_dhcp_options_association",
                    "depends_on": [
                        "aws_vpc.terraformmain",
                        "aws_vpc_dhcp_options.mydhcp"
                    ],
                    "primary": {
                        "id": "dopt-c046b9a7-vpc-4c385c2b",
                        "attributes": {
                            "dhcp_options_id": "dopt-c046b9a7",
                            "id": "dopt-c046b9a7-vpc-4c385c2b",
                            "vpc_id": "vpc-4c385c2b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2017-09-06 13:01:50.8260686 +0000 UTC",
                        "attributes": {
                            "id": "2017-09-06 13:01:50.8260686 +0000 UTC",
                            "names.#": "3",
                            "names.0": "eu-west-1a",
                            "names.1": "eu-west-1b",
                            "names.2": "eu-west-1c"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.userdata-gateway": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_s3_bucket.bucket"
                    ],
                    "primary": {
                        "id": "ec83184c64731e6feec9c6f9e2d33a863c673277cd651bd5ad538947321a0ac0",
                        "attributes": {
                            "id": "ec83184c64731e6feec9c6f9e2d33a863c673277cd651bd5ad538947321a0ac0",
                            "rendered": "#!/bin/bash\r\n\r\ncat \u003e/startup.sh \u003c\u003cEOL\r\n#!/bin/bash\r\nS3_BUCKET=venus.je-k8s-state\r\nexport TUNNEL_MODE=geneve\r\nexport LOCAL_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport HOSTNAME=`hostname`\r\nexport K8S_VERSION=1.7.3\r\nexport K8S_POD_SUBNET=10.244.0.0/16\r\nexport GW_IP=\\$(/sbin/ip route | awk '/default/ { print \\$3 }')\r\nexport NIC=eth0\r\n\r\nenv\r\n\r\ngroupadd kube-cert\r\n\r\napt install -y awscli \r\n\r\n#Needs to wait until master ip is there, to avoid race condition with master nodes\r\nuntil aws s3 cp s3://\\$S3_BUCKET/masterip /masterip\r\ndo\r\n  echo \"master ip not available\"\r\n  sleep 5 \r\ndone\r\n\r\naws s3 cp s3://\\$S3_BUCKET/tls/ca-key.pem /etc/kubernetes/tls/ca-key.pem \r\naws s3 cp s3://\\$S3_BUCKET/tls/ca.pem /etc/kubernetes/tls/ca.pem \r\n\r\nexport MASTER_IP=\\$(\u003c /masterip)\r\n\r\necho \"MASTER_IP \\$MASTER_IP\"\r\necho \"LOCAL_IP \\$LOCAL_IP\"\r\necho \"K8S_NODE_POD_SUBNET \\$K8S_POD_SUBNET\"\r\n\r\n\r\novs-vsctl set Open_vSwitch . external_ids:ovn-remote=\"tcp:\\$MASTER_IP:6642\" \\\r\n  external_ids:ovn-nb=\"tcp:\\$MASTER_IP:6641\" \\\r\n  external_ids:ovn-encap-ip=\"\\$LOCAL_IP\" \\\r\n  external_ids:ovn-encap-type=\"\\$TUNNEL_MODE\"\r\n\r\novs-vsctl get Open_vSwitch . external_ids\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/gateway\r\n\r\nrm -rf tmp\r\nmkdir tmp\r\ncp -R ../worker/make-certs ../worker/openssl.cnf ../worker/kubeconfig.yaml systemd tmp/\r\n\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/kubeconfig.yaml\r\nsed -i\"*\" \"s|__LOCAL_IP__|\\$LOCAL_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/make-certs\r\nsed -i\"*\" \"s|__NIC__|\\$NIC|g\" tmp/systemd/ovn-k8s-gateway-helper.service\r\nsed -i\"*\" \"s|__NIC__|\\$NIC|g\" tmp/systemd/gateway-network-startup.service\r\n\r\ncd tmp\r\nchmod +x make-certs\r\n./make-certs\r\ncd ..\r\n\r\ncp tmp/kubeconfig.yaml /etc/kubernetes/\r\n\r\ncp tmp/systemd/ovn-k8s-gateway-helper.service /etc/systemd/system/\r\ncp tmp/systemd/gateway-network-startup.service /etc/systemd/system/\r\n\r\ncp check-ovn-k8s-network.sh /usr/bin/\r\nchmod +x /usr/bin/check-ovn-k8s-network.sh\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v\\$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\nkubectl config set-cluster default-cluster --server=https://\\$MASTER_IP --certificate-authority=/etc/kubernetes/tls/ca.pem\r\nkubectl config set-credentials default-admin --certificate-authority=/etc/kubernetes/tls/ca.pem --client-key=/etc/kubernetes/tls/node-key.pem --client-certificate=/etc/kubernetes/tls/node.pem\r\nkubectl config set-context local --cluster=default-cluster --user=default-admin\r\nkubectl config use-context local\r\n\r\necho \"get token\"\r\nexport TOKEN_NAME=\\$(kubectl get secrets | grep default | cut -f1 -d ' ')\r\necho \"TOKEN_NAME: \\$TOKEN_NAME\"\r\nexport TOKEN=\\$(kubectl describe secret \\$TOKEN_NAME | grep -E '^token' | cut -f2 -d':' | tr -d '\\t')\r\necho \"TOKEN \\$TOKEN\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:k8s-api-server=\"https://\\$MASTER_IP\" external_ids:k8s-api-token=\"\\$TOKEN\"\r\n\r\nln -fs /etc/kubernetes/tls/ca.pem /etc/openvswitch/k8s-ca.crt\r\n\r\ncd ~\r\ngit clone https://github.com/openvswitch/ovn-kubernetes\r\ncd ovn-kubernetes\r\n\r\npip install --upgrade --prefix=/usr/local --ignore-installed .\r\n\r\n# This command will print \"RTNETLINK answers: Network is unreachable\" and\r\n# \"RTNETLINK answers: File exists\"; these messages are expected.\r\novn-k8s-util nics-to-bridge \\$NIC \u0026\u0026 dhclient br\\$NIC\r\n\r\necho \"debugging\" \r\n\r\necho \"ovn-k8s-overlay gateway-init --cluster-ip-subnet \\\"\\$K8S_POD_SUBNET\\\" --bridge-interface \\\"br\\$NIC\\\" --physical-ip \\\"\\$LOCAL_IP/24\\\" --node-name \\\"\\$HOSTNAME\\\" --default-gw \\\"\\$GW_IP\\\"\"\r\novn-k8s-overlay gateway-init --cluster-ip-subnet \"\\$K8S_POD_SUBNET\" --bridge-interface \"br\\$NIC\" --physical-ip \"\\$LOCAL_IP/24\" --node-name \"\\$HOSTNAME\" --default-gw \"\\$GW_IP\"\r\n\r\nsystemctl daemon-reload\r\nsystemctl enable ovn-k8s-gateway-helper.service\r\nsystemctl enable gateway-network-startup.service\r\nsystemctl start ovn-k8s-gateway-helper.service\r\n\r\necho \\$LOCAL_IP \u003e /gwip\r\naws s3 cp /gwip s3://\\$S3_BUCKET/gwip\r\n\r\ncat \u003e /etc/rc.local \u003c\u003cAOL\r\n#!/bin/sh -e\r\n#\r\nexit 0\r\nAOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nEOL\r\n\r\nchmod 755 /startup.sh\r\n\r\nexport K8S_VERSION=1.7.3\r\nexport S3_BUCKET=venus.je-k8s-state\r\n\r\napt update -y\r\napt-get -y install  python-minimal python-six\r\n\r\ncurl -fsSL https://yum.dockerproject.org/gpg | apt-key add -\r\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e sudo tee /etc/apt/sources.list.d/docker.list\r\n\r\napt update -y\r\necho \"install docker\"\r\napt install -y docker.io dkms\r\n\r\ncd ~\r\ngit clone https://github.com/apprenda/kubernetes-ovn-heterogeneous-cluster\r\ncd kubernetes-ovn-heterogeneous-cluster/deb\r\n\r\ndpkg -i openvswitch-common_2.7.2-1_amd64.deb \\\r\nopenvswitch-datapath-dkms_2.7.2-1_all.deb \\\r\nopenvswitch-switch_2.7.2-1_amd64.deb \\\r\novn-common_2.7.2-1_amd64.deb \\\r\novn-central_2.7.2-1_amd64.deb \\\r\novn-docker_2.7.2-1_amd64.deb \\\r\novn-host_2.7.2-1_amd64.deb \\\r\npython-openvswitch_2.7.2-1_all.deb\r\n\r\necho vport_geneve \u003e\u003e /etc/modules-load.d/modules.conf\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\napt install -y python-pip\r\npip install --upgrade pip\r\napt install -y awscli \r\n\r\ncat \u003e/etc/rc.local \u003c\u003cEOL\r\n#!/bin/sh -e\r\n#\r\nsudo /startup.sh \u003e /var/log/startup.log 2\u003e\u00261\r\nexit 0\r\nEOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nmkdir -p /etc/kubernetes/tls\r\n\r\necho \"rebooting\"\r\nreboot\r\n\r\n",
                            "template": "#!/bin/bash\r\n\r\ncat \u003e/startup.sh \u003c\u003cEOL\r\n#!/bin/bash\r\nS3_BUCKET=${bucket_name}\r\nexport TUNNEL_MODE=geneve\r\nexport LOCAL_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport HOSTNAME=`hostname`\r\nexport K8S_VERSION=1.7.3\r\nexport K8S_POD_SUBNET=10.244.0.0/16\r\nexport GW_IP=\\$(/sbin/ip route | awk '/default/ { print \\$3 }')\r\nexport NIC=eth0\r\n\r\nenv\r\n\r\ngroupadd kube-cert\r\n\r\napt install -y awscli \r\n\r\n#Needs to wait until master ip is there, to avoid race condition with master nodes\r\nuntil aws s3 cp s3://\\$S3_BUCKET/masterip /masterip\r\ndo\r\n  echo \"master ip not available\"\r\n  sleep 5 \r\ndone\r\n\r\naws s3 cp s3://\\$S3_BUCKET/tls/ca-key.pem /etc/kubernetes/tls/ca-key.pem \r\naws s3 cp s3://\\$S3_BUCKET/tls/ca.pem /etc/kubernetes/tls/ca.pem \r\n\r\nexport MASTER_IP=\\$$(\u003c /masterip)\r\n\r\necho \"MASTER_IP \\$MASTER_IP\"\r\necho \"LOCAL_IP \\$LOCAL_IP\"\r\necho \"K8S_NODE_POD_SUBNET \\$K8S_POD_SUBNET\"\r\n\r\n\r\novs-vsctl set Open_vSwitch . external_ids:ovn-remote=\"tcp:\\$MASTER_IP:6642\" \\\r\n  external_ids:ovn-nb=\"tcp:\\$MASTER_IP:6641\" \\\r\n  external_ids:ovn-encap-ip=\"\\$LOCAL_IP\" \\\r\n  external_ids:ovn-encap-type=\"\\$TUNNEL_MODE\"\r\n\r\novs-vsctl get Open_vSwitch . external_ids\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/gateway\r\n\r\nrm -rf tmp\r\nmkdir tmp\r\ncp -R ../worker/make-certs ../worker/openssl.cnf ../worker/kubeconfig.yaml systemd tmp/\r\n\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/kubeconfig.yaml\r\nsed -i\"*\" \"s|__LOCAL_IP__|\\$LOCAL_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/make-certs\r\nsed -i\"*\" \"s|__NIC__|\\$NIC|g\" tmp/systemd/ovn-k8s-gateway-helper.service\r\nsed -i\"*\" \"s|__NIC__|\\$NIC|g\" tmp/systemd/gateway-network-startup.service\r\n\r\ncd tmp\r\nchmod +x make-certs\r\n./make-certs\r\ncd ..\r\n\r\ncp tmp/kubeconfig.yaml /etc/kubernetes/\r\n\r\ncp tmp/systemd/ovn-k8s-gateway-helper.service /etc/systemd/system/\r\ncp tmp/systemd/gateway-network-startup.service /etc/systemd/system/\r\n\r\ncp check-ovn-k8s-network.sh /usr/bin/\r\nchmod +x /usr/bin/check-ovn-k8s-network.sh\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v\\$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\nkubectl config set-cluster default-cluster --server=https://\\$MASTER_IP --certificate-authority=/etc/kubernetes/tls/ca.pem\r\nkubectl config set-credentials default-admin --certificate-authority=/etc/kubernetes/tls/ca.pem --client-key=/etc/kubernetes/tls/node-key.pem --client-certificate=/etc/kubernetes/tls/node.pem\r\nkubectl config set-context local --cluster=default-cluster --user=default-admin\r\nkubectl config use-context local\r\n\r\necho \"get token\"\r\nexport TOKEN_NAME=\\$$(kubectl get secrets | grep default | cut -f1 -d ' ')\r\necho \"TOKEN_NAME: \\$TOKEN_NAME\"\r\nexport TOKEN=\\$$(kubectl describe secret \\$TOKEN_NAME | grep -E '^token' | cut -f2 -d':' | tr -d '\\t')\r\necho \"TOKEN \\$TOKEN\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:k8s-api-server=\"https://\\$MASTER_IP\" external_ids:k8s-api-token=\"\\$TOKEN\"\r\n\r\nln -fs /etc/kubernetes/tls/ca.pem /etc/openvswitch/k8s-ca.crt\r\n\r\ncd ~\r\ngit clone https://github.com/openvswitch/ovn-kubernetes\r\ncd ovn-kubernetes\r\n\r\npip install --upgrade --prefix=/usr/local --ignore-installed .\r\n\r\n# This command will print \"RTNETLINK answers: Network is unreachable\" and\r\n# \"RTNETLINK answers: File exists\"; these messages are expected.\r\novn-k8s-util nics-to-bridge \\$NIC \u0026\u0026 dhclient br\\$NIC\r\n\r\necho \"debugging\" \r\n\r\necho \"ovn-k8s-overlay gateway-init --cluster-ip-subnet \\\"\\$K8S_POD_SUBNET\\\" --bridge-interface \\\"br\\$NIC\\\" --physical-ip \\\"\\$LOCAL_IP/24\\\" --node-name \\\"\\$HOSTNAME\\\" --default-gw \\\"\\$GW_IP\\\"\"\r\novn-k8s-overlay gateway-init --cluster-ip-subnet \"\\$K8S_POD_SUBNET\" --bridge-interface \"br\\$NIC\" --physical-ip \"\\$LOCAL_IP/24\" --node-name \"\\$HOSTNAME\" --default-gw \"\\$GW_IP\"\r\n\r\nsystemctl daemon-reload\r\nsystemctl enable ovn-k8s-gateway-helper.service\r\nsystemctl enable gateway-network-startup.service\r\nsystemctl start ovn-k8s-gateway-helper.service\r\n\r\necho \\$LOCAL_IP \u003e /gwip\r\naws s3 cp /gwip s3://\\$S3_BUCKET/gwip\r\n\r\ncat \u003e /etc/rc.local \u003c\u003cAOL\r\n#!/bin/sh -e\r\n#\r\nexit 0\r\nAOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nEOL\r\n\r\nchmod 755 /startup.sh\r\n\r\nexport K8S_VERSION=1.7.3\r\nexport S3_BUCKET=${bucket_name}\r\n\r\napt update -y\r\napt-get -y install  python-minimal python-six\r\n\r\ncurl -fsSL https://yum.dockerproject.org/gpg | apt-key add -\r\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e sudo tee /etc/apt/sources.list.d/docker.list\r\n\r\napt update -y\r\necho \"install docker\"\r\napt install -y docker.io dkms\r\n\r\ncd ~\r\ngit clone https://github.com/apprenda/kubernetes-ovn-heterogeneous-cluster\r\ncd kubernetes-ovn-heterogeneous-cluster/deb\r\n\r\ndpkg -i openvswitch-common_2.7.2-1_amd64.deb \\\r\nopenvswitch-datapath-dkms_2.7.2-1_all.deb \\\r\nopenvswitch-switch_2.7.2-1_amd64.deb \\\r\novn-common_2.7.2-1_amd64.deb \\\r\novn-central_2.7.2-1_amd64.deb \\\r\novn-docker_2.7.2-1_amd64.deb \\\r\novn-host_2.7.2-1_amd64.deb \\\r\npython-openvswitch_2.7.2-1_all.deb\r\n\r\necho vport_geneve \u003e\u003e /etc/modules-load.d/modules.conf\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\napt install -y python-pip\r\npip install --upgrade pip\r\napt install -y awscli \r\n\r\ncat \u003e/etc/rc.local \u003c\u003cEOL\r\n#!/bin/sh -e\r\n#\r\nsudo /startup.sh \u003e /var/log/startup.log 2\u003e\u00261\r\nexit 0\r\nEOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nmkdir -p /etc/kubernetes/tls\r\n\r\necho \"rebooting\"\r\nreboot\r\n\r\n",
                            "vars.%": "1",
                            "vars.bucket_name": "venus.je-k8s-state"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.userdata-linux-node": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_s3_bucket.bucket"
                    ],
                    "primary": {
                        "id": "64aae21c6d775cded674aee1f187f3943ceff3d100c49b49142b7a9f94419b17",
                        "attributes": {
                            "id": "64aae21c6d775cded674aee1f187f3943ceff3d100c49b49142b7a9f94419b17",
                            "rendered": "#!/bin/bash\r\n\r\ncat \u003e/startup.sh \u003c\u003cEOL\r\n#!/bin/bash\r\nS3_BUCKET=venus.je-k8s-state\r\nexport TUNNEL_MODE=geneve\r\nexport LOCAL_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport LAST_OCTET=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}' | cut -d . -f 4)\r\nexport HOSTNAME=`hostname`\r\nexport K8S_VERSION=1.7.3\r\nexport K8S_POD_SUBNET=10.244.0.0/16\r\nexport K8S_NODE_POD_SUBNET=10.244.\\$LAST_OCTET.0/24\r\nexport K8S_DNS_SERVICE_IP=10.100.0.10\r\nexport K8S_DNS_DOMAIN=cluster.local\r\n\r\nenv\r\n\r\ngroupadd kube-cert\r\n\r\napt install -y awscli \r\n\r\n#Needs to wait until gw ip is there, to avoid race condition with master and gw nodes\r\nuntil aws s3 cp s3://\\$S3_BUCKET/gwip /gwip\r\ndo\r\n  echo \"gw ip not available\"\r\n  sleep 5 \r\ndone\r\naws s3 cp s3://\\$S3_BUCKET/masterip /masterip\r\naws s3 cp s3://\\$S3_BUCKET/tls/ca-key.pem /etc/kubernetes/tls/ca-key.pem \r\naws s3 cp s3://\\$S3_BUCKET/tls/ca.pem /etc/kubernetes/tls/ca.pem \r\n\r\nexport MASTER_IP=\\$(\u003c /masterip)\r\n\r\necho \"MASTER_IP \\$MASTER_IP\"\r\necho \"LOCAL_IP \\$LOCAL_IP\"\r\necho \"K8S_NODE_POD_SUBNET \\$K8S_NODE_POD_SUBNET\"\r\n\r\n\r\novs-vsctl set Open_vSwitch . external_ids:ovn-remote=\"tcp:\\$MASTER_IP:6642\" \\\r\n  external_ids:ovn-nb=\"tcp:\\$MASTER_IP:6641\" \\\r\n  external_ids:ovn-encap-ip=\"\\$LOCAL_IP\" \\\r\n  external_ids:ovn-encap-type=\"\\$TUNNEL_MODE\"\r\n\r\novs-vsctl get Open_vSwitch . external_ids\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/worker/linux\r\n\r\nrm -rf tmp\r\nmkdir tmp\r\ncp -R ../make-certs ../openssl.cnf ../kubeconfig.yaml systemd tmp/\r\n# so a bit of a hacky way to get a unique subnet address , works for only 254 nodes right....\r\n\r\nsed -i\"*\" \"s|__K8S_VERSION__|\\$K8S_VERSION|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/kubeconfig.yaml\r\nsed -i\"*\" \"s|__LOCAL_IP__|\\$LOCAL_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__LOCAL_IP__|\\$LOCAL_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/make-certs\r\nsed -i\"*\" \"s|__K8S_DNS_SERVICE_IP__|\\$K8S_DNS_SERVICE_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__K8S_DNS_DOMAIN__|\\$K8S_DNS_DOMAIN|g\" tmp/systemd/kubelet.service\r\n\r\ncd tmp\r\nchmod +x make-certs\r\n./make-certs\r\ncd ..\r\n\r\nmkdir -p /etc/kubernetes/\r\n\r\ncp tmp/kubeconfig.yaml /etc/kubernetes/\r\n\r\ncp -R tmp/systemd/*.service /etc/systemd/system/\r\nsystemctl daemon-reload\r\n\r\n#curl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v\\$K8S_VERSION/bin/linux/amd64/kubectl\r\n#chmod +x /usr/bin/kubectl\r\n\r\nkubectl config set-cluster default-cluster --server=https://\\$MASTER_IP --certificate-authority=/etc/kubernetes/tls/ca.pem\r\nkubectl config set-credentials default-admin --certificate-authority=/etc/kubernetes/tls/ca.pem --client-key=/etc/kubernetes/tls/node-key.pem --client-certificate=/etc/kubernetes/tls/node.pem\r\nkubectl config set-context local --cluster=default-cluster --user=default-admin\r\nkubectl config use-context local\r\necho \"--- get nodes \"\r\nkubectl get nodes\r\nkubectl get secrets\r\necho \"---\"\r\n\r\necho \"get token\"\r\nexport TOKEN_NAME=\\$(kubectl get secrets | grep default | cut -f1 -d ' ')\r\necho \"TOKEN_NAME: \\$TOKEN_NAME\"\r\nexport TOKEN=\\$(kubectl describe secret \\$TOKEN_NAME | grep -E '^token' | cut -f2 -d':' | tr -d '\\t')\r\necho \"TOKEN \\$TOKEN\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:k8s-api-server=\"https://\\$MASTER_IP\" external_ids:k8s-api-token=\"\\$TOKEN\"\r\nln -fs /etc/kubernetes/tls/ca.pem /etc/openvswitch/k8s-ca.crt\r\necho \"TOKEN \\$TOKEN\" \r\n\r\nmkdir -p /opt/cni/bin \u0026\u0026 cd /opt/cni/bin\r\ncurl -Lskj -o cni.tar.gz https://github.com/containernetworking/cni/releases/download/v0.4.0/cni-v0.4.0.tgz\r\ntar zxf cni.tar.gz\r\nrm -f cni.tar.gz\r\n\r\ncd ~\r\ngit clone https://github.com/openvswitch/ovn-kubernetes\r\ncd ovn-kubernetes\r\npip install --upgrade --prefix=/usr/local --ignore-installed .\r\n\r\novn-k8s-overlay minion-init --cluster-ip-subnet=\"\\$K8S_POD_SUBNET\" --minion-switch-subnet=\"\\$K8S_NODE_POD_SUBNET\" --node-name=\"\\$HOSTNAME\"\r\n\r\n\r\nsystemctl enable kubelet\r\nsystemctl start kubelet\r\n\r\ncat \u003e /etc/rc.local \u003c\u003cAOL\r\n#!/bin/sh -e\r\n#\r\nexit 0\r\nAOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nEOL\r\n\r\nchmod 755 /startup.sh\r\n\r\nexport K8S_VERSION=1.7.3\r\nexport S3_BUCKET=venus.je-k8s-state\r\n\r\napt update -y\r\napt-get -y install  python-minimal python-six\r\n\r\ncurl -fsSL https://yum.dockerproject.org/gpg | apt-key add -\r\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e sudo tee /etc/apt/sources.list.d/docker.list\r\n\r\napt update -y\r\necho \"install docker\"\r\napt install -y docker.io dkms\r\n\r\ncd ~\r\ngit clone https://github.com/apprenda/kubernetes-ovn-heterogeneous-cluster\r\ncd kubernetes-ovn-heterogeneous-cluster/deb\r\n\r\ndpkg -i openvswitch-common_2.7.2-1_amd64.deb \\\r\nopenvswitch-datapath-dkms_2.7.2-1_all.deb \\\r\nopenvswitch-switch_2.7.2-1_amd64.deb \\\r\novn-common_2.7.2-1_amd64.deb \\\r\novn-central_2.7.2-1_amd64.deb \\\r\novn-docker_2.7.2-1_amd64.deb \\\r\novn-host_2.7.2-1_amd64.deb \\\r\npython-openvswitch_2.7.2-1_all.deb\r\n\r\necho vport_geneve \u003e\u003e /etc/modules-load.d/modules.conf\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\napt install -y python-pip\r\npip install --upgrade pip\r\napt install -y awscli \r\n\r\ncat \u003e/etc/rc.local \u003c\u003cEOL\r\n#!/bin/sh -e\r\n#\r\nsudo /startup.sh \u003e /var/log/startup.log 2\u003e\u00261\r\nexit 0\r\nEOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nmkdir -p /etc/kubernetes/tls\r\n\r\necho \"rebooting\"\r\nreboot\r\n\r\n",
                            "template": "#!/bin/bash\r\n\r\ncat \u003e/startup.sh \u003c\u003cEOL\r\n#!/bin/bash\r\nS3_BUCKET=${bucket_name}\r\nexport TUNNEL_MODE=geneve\r\nexport LOCAL_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport LAST_OCTET=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}' | cut -d . -f 4)\r\nexport HOSTNAME=`hostname`\r\nexport K8S_VERSION=1.7.3\r\nexport K8S_POD_SUBNET=10.244.0.0/16\r\nexport K8S_NODE_POD_SUBNET=10.244.\\$LAST_OCTET.0/24\r\nexport K8S_DNS_SERVICE_IP=10.100.0.10\r\nexport K8S_DNS_DOMAIN=cluster.local\r\n\r\nenv\r\n\r\ngroupadd kube-cert\r\n\r\napt install -y awscli \r\n\r\n#Needs to wait until gw ip is there, to avoid race condition with master and gw nodes\r\nuntil aws s3 cp s3://\\$S3_BUCKET/gwip /gwip\r\ndo\r\n  echo \"gw ip not available\"\r\n  sleep 5 \r\ndone\r\naws s3 cp s3://\\$S3_BUCKET/masterip /masterip\r\naws s3 cp s3://\\$S3_BUCKET/tls/ca-key.pem /etc/kubernetes/tls/ca-key.pem \r\naws s3 cp s3://\\$S3_BUCKET/tls/ca.pem /etc/kubernetes/tls/ca.pem \r\n\r\nexport MASTER_IP=\\$$(\u003c /masterip)\r\n\r\necho \"MASTER_IP \\$MASTER_IP\"\r\necho \"LOCAL_IP \\$LOCAL_IP\"\r\necho \"K8S_NODE_POD_SUBNET \\$K8S_NODE_POD_SUBNET\"\r\n\r\n\r\novs-vsctl set Open_vSwitch . external_ids:ovn-remote=\"tcp:\\$MASTER_IP:6642\" \\\r\n  external_ids:ovn-nb=\"tcp:\\$MASTER_IP:6641\" \\\r\n  external_ids:ovn-encap-ip=\"\\$LOCAL_IP\" \\\r\n  external_ids:ovn-encap-type=\"\\$TUNNEL_MODE\"\r\n\r\novs-vsctl get Open_vSwitch . external_ids\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/worker/linux\r\n\r\nrm -rf tmp\r\nmkdir tmp\r\ncp -R ../make-certs ../openssl.cnf ../kubeconfig.yaml systemd tmp/\r\n# so a bit of a hacky way to get a unique subnet address , works for only 254 nodes right....\r\n\r\nsed -i\"*\" \"s|__K8S_VERSION__|\\$K8S_VERSION|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/kubeconfig.yaml\r\nsed -i\"*\" \"s|__LOCAL_IP__|\\$LOCAL_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__LOCAL_IP__|\\$LOCAL_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/make-certs\r\nsed -i\"*\" \"s|__K8S_DNS_SERVICE_IP__|\\$K8S_DNS_SERVICE_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__K8S_DNS_DOMAIN__|\\$K8S_DNS_DOMAIN|g\" tmp/systemd/kubelet.service\r\n\r\ncd tmp\r\nchmod +x make-certs\r\n./make-certs\r\ncd ..\r\n\r\nmkdir -p /etc/kubernetes/\r\n\r\ncp tmp/kubeconfig.yaml /etc/kubernetes/\r\n\r\ncp -R tmp/systemd/*.service /etc/systemd/system/\r\nsystemctl daemon-reload\r\n\r\n#curl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v\\$K8S_VERSION/bin/linux/amd64/kubectl\r\n#chmod +x /usr/bin/kubectl\r\n\r\nkubectl config set-cluster default-cluster --server=https://\\$MASTER_IP --certificate-authority=/etc/kubernetes/tls/ca.pem\r\nkubectl config set-credentials default-admin --certificate-authority=/etc/kubernetes/tls/ca.pem --client-key=/etc/kubernetes/tls/node-key.pem --client-certificate=/etc/kubernetes/tls/node.pem\r\nkubectl config set-context local --cluster=default-cluster --user=default-admin\r\nkubectl config use-context local\r\necho \"--- get nodes \"\r\nkubectl get nodes\r\nkubectl get secrets\r\necho \"---\"\r\n\r\necho \"get token\"\r\nexport TOKEN_NAME=\\$$(kubectl get secrets | grep default | cut -f1 -d ' ')\r\necho \"TOKEN_NAME: \\$TOKEN_NAME\"\r\nexport TOKEN=\\$$(kubectl describe secret \\$TOKEN_NAME | grep -E '^token' | cut -f2 -d':' | tr -d '\\t')\r\necho \"TOKEN \\$TOKEN\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:k8s-api-server=\"https://\\$MASTER_IP\" external_ids:k8s-api-token=\"\\$TOKEN\"\r\nln -fs /etc/kubernetes/tls/ca.pem /etc/openvswitch/k8s-ca.crt\r\necho \"TOKEN \\$TOKEN\" \r\n\r\nmkdir -p /opt/cni/bin \u0026\u0026 cd /opt/cni/bin\r\ncurl -Lskj -o cni.tar.gz https://github.com/containernetworking/cni/releases/download/v0.4.0/cni-v0.4.0.tgz\r\ntar zxf cni.tar.gz\r\nrm -f cni.tar.gz\r\n\r\ncd ~\r\ngit clone https://github.com/openvswitch/ovn-kubernetes\r\ncd ovn-kubernetes\r\npip install --upgrade --prefix=/usr/local --ignore-installed .\r\n\r\novn-k8s-overlay minion-init --cluster-ip-subnet=\"\\$K8S_POD_SUBNET\" --minion-switch-subnet=\"\\$K8S_NODE_POD_SUBNET\" --node-name=\"\\$HOSTNAME\"\r\n\r\n\r\nsystemctl enable kubelet\r\nsystemctl start kubelet\r\n\r\ncat \u003e /etc/rc.local \u003c\u003cAOL\r\n#!/bin/sh -e\r\n#\r\nexit 0\r\nAOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nEOL\r\n\r\nchmod 755 /startup.sh\r\n\r\nexport K8S_VERSION=1.7.3\r\nexport S3_BUCKET=${bucket_name}\r\n\r\napt update -y\r\napt-get -y install  python-minimal python-six\r\n\r\ncurl -fsSL https://yum.dockerproject.org/gpg | apt-key add -\r\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e sudo tee /etc/apt/sources.list.d/docker.list\r\n\r\napt update -y\r\necho \"install docker\"\r\napt install -y docker.io dkms\r\n\r\ncd ~\r\ngit clone https://github.com/apprenda/kubernetes-ovn-heterogeneous-cluster\r\ncd kubernetes-ovn-heterogeneous-cluster/deb\r\n\r\ndpkg -i openvswitch-common_2.7.2-1_amd64.deb \\\r\nopenvswitch-datapath-dkms_2.7.2-1_all.deb \\\r\nopenvswitch-switch_2.7.2-1_amd64.deb \\\r\novn-common_2.7.2-1_amd64.deb \\\r\novn-central_2.7.2-1_amd64.deb \\\r\novn-docker_2.7.2-1_amd64.deb \\\r\novn-host_2.7.2-1_amd64.deb \\\r\npython-openvswitch_2.7.2-1_all.deb\r\n\r\necho vport_geneve \u003e\u003e /etc/modules-load.d/modules.conf\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\napt install -y python-pip\r\npip install --upgrade pip\r\napt install -y awscli \r\n\r\ncat \u003e/etc/rc.local \u003c\u003cEOL\r\n#!/bin/sh -e\r\n#\r\nsudo /startup.sh \u003e /var/log/startup.log 2\u003e\u00261\r\nexit 0\r\nEOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nmkdir -p /etc/kubernetes/tls\r\n\r\necho \"rebooting\"\r\nreboot\r\n\r\n",
                            "vars.%": "1",
                            "vars.bucket_name": "venus.je-k8s-state"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.userdata-master": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_s3_bucket.bucket"
                    ],
                    "primary": {
                        "id": "3b5616addff7e8944b91de42fb623bec63b41abef0be5580c8a4049b52d54313",
                        "attributes": {
                            "id": "3b5616addff7e8944b91de42fb623bec63b41abef0be5580c8a4049b52d54313",
                            "rendered": "#!/bin/bash\r\n\r\ncat \u003e/startup.sh \u003c\u003cEOL\r\n#!/bin/bash\r\nexport S3_BUCKET=venus.je-k8s-state\r\nexport K8S_VERSION=1.7.3\r\nexport TUNNEL_MODE=geneve\r\nexport LOCAL_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport MASTER_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport HOSTNAME=`hostname`\r\nexport K8S_VERSION=1.7.3\r\nexport K8S_POD_SUBNET=10.244.0.0/16\r\nexport K8S_NODE_POD_SUBNET=10.244.1.0/24\r\nexport K8S_SERVICE_SUBNET=10.100.0.0/16\r\nexport K8S_API_SERVICE_IP=10.100.0.1\r\nexport K8S_DNS_VERSION=1.13.0\r\nexport K8S_DNS_SERVICE_IP=10.100.0.10\r\nexport K8S_DNS_DOMAIN=cluster.local\r\nexport ETCD_VERSION=3.1.1\r\nexport MASTER_INTERNAL_IP=10.244.1.2\r\necho \"ovn setup\"\r\n\r\necho \"open v switch setup\"\r\nsleep 5 \r\necho \"setting connections\"\r\novn-nbctl set-connection ptcp:6641\r\novn-sbctl set-connection ptcp:6642\r\necho \"connections set\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:ovn-remote=\"tcp:\\$MASTER_IP:6642\" external_ids:ovn-nb=\"tcp:\\$MASTER_IP:6641\" external_ids:ovn-encap-ip=\"\\$LOCAL_IP\" external_ids:ovn-encap-type=\"\\$TUNNEL_MODE\"\r\n\r\novs-vsctl get Open_vSwitch . external_ids\r\necho \"--- north and southbound\"\r\necho \\$(ovn-sbctl show)\r\necho \\$(ovn-nbctl show)\r\necho \"---\"\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/master\r\nrm -rf tmp\r\nmkdir tmp\r\ncp -R make-certs openssl.cnf kubedns-* manifests systemd tmp/\r\n\r\n# The following is needed for now, because OVS can't route from pod network to node.\r\n\r\nsed -i\"*\" \"s|__K8S_VERSION__|\\$K8S_VERSION|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__K8S_VERSION__|\\$K8S_VERSION|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__ETCD_VERSION__|\\$ETCD_VERSION|g\" tmp/systemd/etcd3.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__MASTER_INTERNAL_IP__|\\$MASTER_INTERNAL_IP|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/make-certs\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__K8S_API_SERVICE_IP__|\\$K8S_API_SERVICE_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__K8S_POD_SUBNET__|\\$K8S_POD_SUBNET|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__K8S_SERVICE_SUBNET__|\\$K8S_SERVICE_SUBNET|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__K8S_DNS_SERVICE_IP__|\\$K8S_DNS_SERVICE_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__K8S_DNS_DOMAIN__|\\$K8S_DNS_DOMAIN|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__K8S_DNS_SERVICE_IP__|\\$K8S_DNS_SERVICE_IP|g\" tmp/kubedns-service.yaml\r\nsed -i\"*\" \"s|__K8S_DNS_VERSION__|\\$K8S_DNS_VERSION|g\" tmp/kubedns-deployment.yaml\r\nsed -i\"*\" \"s|__K8S_DNS_DOMAIN__|\\$K8S_DNS_DOMAIN|g\" tmp/*.*\r\n\r\ncp -R tmp/systemd/*.service /etc/systemd/system/\r\nsystemctl daemon-reload\r\nsystemctl enable etcd3\r\nsystemctl start etcd3\r\n\r\ncd tmp\r\nchmod +x make-certs\r\n./make-certs\r\ncd ..\r\n\r\nmkdir -p /etc/kubernetes\r\ncp -R tmp/manifests /etc/kubernetes/\r\n\r\nsystemctl enable kubelet\r\nsystemctl start kubelet\r\n\r\nkubectl config set-cluster default-cluster --server=https://\\$MASTER_IP --certificate-authority=/etc/kubernetes/tls/ca.pem\r\nkubectl config set-credentials default-admin --certificate-authority=/etc/kubernetes/tls/ca.pem --client-key=/etc/kubernetes/tls/admin-key.pem --client-certificate=/etc/kubernetes/tls/admin.pem\r\nkubectl config set-context local --cluster=default-cluster --user=default-admin\r\nkubectl config use-context local\r\n\r\nwhile true; do\r\n  str=\\$(kubectl get nodes)\r\n  echo Output: \\$str\r\n  if [[ \\$str =~ \"SchedulingDisabled\" ]]; then\r\n    break\r\n  fi\r\n  sleep 1\r\ndone\r\necho \"get token\"\r\nexport TOKEN_NAME=\\$(kubectl get secrets | grep default | cut -f1 -d ' ')\r\necho \"TOKEN_NAME: \\$TOKEN_NAME\"\r\nexport TOKEN=\\$(kubectl describe secret \\$TOKEN_NAME | grep -E '^token' | cut -f2 -d':' | tr -d '\\t')\r\necho \"TOKEN \\$TOKEN\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:k8s-api-server=\"https://\\$MASTER_IP\" external_ids:k8s-api-token=\"\\$TOKEN\"\r\n\r\nln -fs /etc/kubernetes/tls/ca.pem /etc/openvswitch/k8s-ca.crt\r\n\r\nmkdir -p /opt/cni/bin \u0026\u0026 cd /opt/cni/bin\r\ncurl -Lskj -o cni.tar.gz https://github.com/containernetworking/cni/releases/download/v0.4.0/cni-v0.4.0.tgz\r\ntar zxf cni.tar.gz\r\nrm -f cni.tar.gz\r\n\r\ncd ~\r\ngit clone https://github.com/openvswitch/ovn-kubernetes\r\ncd ovn-kubernetes\r\n\r\npip install --upgrade --prefix=/usr/local --ignore-installed .\r\n\r\necho \"sleeping\"\r\nsleep 20 \r\necho \"slept\"\r\n\r\necho \" ovn-k8s-overlay master-init --cluster-ip-subnet=\\\"\\$K8S_POD_SUBNET\\\" --master-switch-subnet=\\\"\\$K8S_NODE_POD_SUBNET\\\" --node-name=\\\"\\$HOSTNAME\\\" \"\r\n\r\novn-k8s-overlay master-init \\\r\n  --cluster-ip-subnet=\"\\$K8S_POD_SUBNET\" \\\r\n  --master-switch-subnet=\"\\$K8S_NODE_POD_SUBNET\" \\\r\n  --node-name=\"\\$HOSTNAME\"\r\n\r\necho \"ovn-k8s-overlay master init exit: \\$?\"\r\n\r\nsystemctl enable ovn-k8s-watcher\r\nsystemctl start ovn-k8s-watcher\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/master\r\nkubectl create -f tmp/kubedns-deployment.yaml\r\nkubectl create -f tmp/kubedns-service.yaml\r\n\r\necho \"uploading files to s3\"\r\n\r\necho \\$MASTER_IP \u003e /masterip\r\naws s3 cp /masterip s3://\\$S3_BUCKET/masterip\r\naws s3 cp /etc/kubernetes/tls/ca-key.pem s3://\\$S3_BUCKET/tls/ca-key.pem\r\naws s3 cp /etc/kubernetes/tls/ca.pem s3://\\$S3_BUCKET/tls/ca.pem\r\naws s3 cp /etc/kubernetes/tls/admin-key.pem s3://\\$S3_BUCKET/admin/admin-key.pem\r\naws s3 cp /etc/kubernetes/tls/admin.pem s3://\\$S3_BUCKET/admin/admin.pem\r\naws s3 cp /root/.kube/config s3://\\$S3_BUCKET/admin/config\r\n\r\nenv\r\n\r\necho \"--- north and southbound\"\r\necho \\$(ovn-sbctl show)\r\necho \\$(ovn-nbctl show)\r\necho \"---\"\r\n\r\n\r\ncat \u003e /etc/rc.local \u003c\u003cAOL\r\n#!/bin/sh -e\r\n#\r\nexit 0\r\nAOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nEOL\r\n\r\nchmod 755 /startup.sh\r\n\r\nexport K8S_VERSION=1.7.3\r\nexport S3_BUCKET=venus.je-k8s-state\r\n\r\napt update -y\r\napt-get -y install  python-minimal python-six\r\n\r\ncurl -fsSL https://yum.dockerproject.org/gpg | apt-key add -\r\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e sudo tee /etc/apt/sources.list.d/docker.list\r\n\r\napt update -y\r\necho \"install docker\"\r\napt install -y docker.io dkms\r\n\r\ncd ~\r\ngit clone https://github.com/apprenda/kubernetes-ovn-heterogeneous-cluster\r\ncd kubernetes-ovn-heterogeneous-cluster/deb\r\n\r\ndpkg -i openvswitch-common_2.7.2-1_amd64.deb \\\r\nopenvswitch-datapath-dkms_2.7.2-1_all.deb \\\r\nopenvswitch-switch_2.7.2-1_amd64.deb \\\r\novn-common_2.7.2-1_amd64.deb \\\r\novn-central_2.7.2-1_amd64.deb \\\r\novn-docker_2.7.2-1_amd64.deb \\\r\novn-host_2.7.2-1_amd64.deb \\\r\npython-openvswitch_2.7.2-1_all.deb\r\n\r\necho vport_geneve \u003e\u003e /etc/modules-load.d/modules.conf\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\napt install -y python-pip\r\npip install --upgrade pip\r\n\r\n\r\napt install awscli -y \r\n\r\ncat \u003e/etc/rc.local \u003c\u003cEOL\r\n#!/bin/sh -e\r\n#\r\nsudo /startup.sh \u003e /var/log/startup.log 2\u003e\u00261\r\nexit 0\r\nEOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\necho \"rebooting\"\r\nreboot\r\n",
                            "template": "#!/bin/bash\r\n\r\ncat \u003e/startup.sh \u003c\u003cEOL\r\n#!/bin/bash\r\nexport S3_BUCKET=${bucket_name}\r\nexport K8S_VERSION=1.7.3\r\nexport TUNNEL_MODE=geneve\r\nexport LOCAL_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport MASTER_IP=\\$(ip addr | grep 'state UP' -A2 | tail -n1 | awk -F'[/ ]+' '{print \\$3}')\r\nexport HOSTNAME=`hostname`\r\nexport K8S_VERSION=1.7.3\r\nexport K8S_POD_SUBNET=10.244.0.0/16\r\nexport K8S_NODE_POD_SUBNET=10.244.1.0/24\r\nexport K8S_SERVICE_SUBNET=10.100.0.0/16\r\nexport K8S_API_SERVICE_IP=10.100.0.1\r\nexport K8S_DNS_VERSION=1.13.0\r\nexport K8S_DNS_SERVICE_IP=10.100.0.10\r\nexport K8S_DNS_DOMAIN=cluster.local\r\nexport ETCD_VERSION=3.1.1\r\nexport MASTER_INTERNAL_IP=10.244.1.2\r\necho \"ovn setup\"\r\n\r\necho \"open v switch setup\"\r\nsleep 5 \r\necho \"setting connections\"\r\novn-nbctl set-connection ptcp:6641\r\novn-sbctl set-connection ptcp:6642\r\necho \"connections set\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:ovn-remote=\"tcp:\\$MASTER_IP:6642\" external_ids:ovn-nb=\"tcp:\\$MASTER_IP:6641\" external_ids:ovn-encap-ip=\"\\$LOCAL_IP\" external_ids:ovn-encap-type=\"\\$TUNNEL_MODE\"\r\n\r\novs-vsctl get Open_vSwitch . external_ids\r\necho \"--- north and southbound\"\r\necho \\$$(ovn-sbctl show)\r\necho \\$$(ovn-nbctl show)\r\necho \"---\"\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/master\r\nrm -rf tmp\r\nmkdir tmp\r\ncp -R make-certs openssl.cnf kubedns-* manifests systemd tmp/\r\n\r\n# The following is needed for now, because OVS can't route from pod network to node.\r\n\r\nsed -i\"*\" \"s|__K8S_VERSION__|\\$K8S_VERSION|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__K8S_VERSION__|\\$K8S_VERSION|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__ETCD_VERSION__|\\$ETCD_VERSION|g\" tmp/systemd/etcd3.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__MASTER_IP__|\\$MASTER_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__MASTER_INTERNAL_IP__|\\$MASTER_INTERNAL_IP|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/make-certs\r\nsed -i\"*\" \"s|__HOSTNAME__|\\$HOSTNAME|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__K8S_API_SERVICE_IP__|\\$K8S_API_SERVICE_IP|g\" tmp/openssl.cnf\r\nsed -i\"*\" \"s|__K8S_POD_SUBNET__|\\$K8S_POD_SUBNET|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__K8S_SERVICE_SUBNET__|\\$K8S_SERVICE_SUBNET|g\" tmp/manifests/*.yaml\r\nsed -i\"*\" \"s|__K8S_DNS_SERVICE_IP__|\\$K8S_DNS_SERVICE_IP|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__K8S_DNS_DOMAIN__|\\$K8S_DNS_DOMAIN|g\" tmp/systemd/kubelet.service\r\nsed -i\"*\" \"s|__K8S_DNS_SERVICE_IP__|\\$K8S_DNS_SERVICE_IP|g\" tmp/kubedns-service.yaml\r\nsed -i\"*\" \"s|__K8S_DNS_VERSION__|\\$K8S_DNS_VERSION|g\" tmp/kubedns-deployment.yaml\r\nsed -i\"*\" \"s|__K8S_DNS_DOMAIN__|\\$K8S_DNS_DOMAIN|g\" tmp/*.*\r\n\r\ncp -R tmp/systemd/*.service /etc/systemd/system/\r\nsystemctl daemon-reload\r\nsystemctl enable etcd3\r\nsystemctl start etcd3\r\n\r\ncd tmp\r\nchmod +x make-certs\r\n./make-certs\r\ncd ..\r\n\r\nmkdir -p /etc/kubernetes\r\ncp -R tmp/manifests /etc/kubernetes/\r\n\r\nsystemctl enable kubelet\r\nsystemctl start kubelet\r\n\r\nkubectl config set-cluster default-cluster --server=https://\\$MASTER_IP --certificate-authority=/etc/kubernetes/tls/ca.pem\r\nkubectl config set-credentials default-admin --certificate-authority=/etc/kubernetes/tls/ca.pem --client-key=/etc/kubernetes/tls/admin-key.pem --client-certificate=/etc/kubernetes/tls/admin.pem\r\nkubectl config set-context local --cluster=default-cluster --user=default-admin\r\nkubectl config use-context local\r\n\r\nwhile true; do\r\n  str=\\$$(kubectl get nodes)\r\n  echo Output: \\$str\r\n  if [[ \\$str =~ \"SchedulingDisabled\" ]]; then\r\n    break\r\n  fi\r\n  sleep 1\r\ndone\r\necho \"get token\"\r\nexport TOKEN_NAME=\\$$(kubectl get secrets | grep default | cut -f1 -d ' ')\r\necho \"TOKEN_NAME: \\$TOKEN_NAME\"\r\nexport TOKEN=\\$$(kubectl describe secret \\$TOKEN_NAME | grep -E '^token' | cut -f2 -d':' | tr -d '\\t')\r\necho \"TOKEN \\$TOKEN\"\r\n\r\novs-vsctl set Open_vSwitch . external_ids:k8s-api-server=\"https://\\$MASTER_IP\" external_ids:k8s-api-token=\"\\$TOKEN\"\r\n\r\nln -fs /etc/kubernetes/tls/ca.pem /etc/openvswitch/k8s-ca.crt\r\n\r\nmkdir -p /opt/cni/bin \u0026\u0026 cd /opt/cni/bin\r\ncurl -Lskj -o cni.tar.gz https://github.com/containernetworking/cni/releases/download/v0.4.0/cni-v0.4.0.tgz\r\ntar zxf cni.tar.gz\r\nrm -f cni.tar.gz\r\n\r\ncd ~\r\ngit clone https://github.com/openvswitch/ovn-kubernetes\r\ncd ovn-kubernetes\r\n\r\npip install --upgrade --prefix=/usr/local --ignore-installed .\r\n\r\necho \"sleeping\"\r\nsleep 20 \r\necho \"slept\"\r\n\r\necho \" ovn-k8s-overlay master-init --cluster-ip-subnet=\\\"\\$K8S_POD_SUBNET\\\" --master-switch-subnet=\\\"\\$K8S_NODE_POD_SUBNET\\\" --node-name=\\\"\\$HOSTNAME\\\" \"\r\n\r\novn-k8s-overlay master-init \\\r\n  --cluster-ip-subnet=\"\\$K8S_POD_SUBNET\" \\\r\n  --master-switch-subnet=\"\\$K8S_NODE_POD_SUBNET\" \\\r\n  --node-name=\"\\$HOSTNAME\"\r\n\r\necho \"ovn-k8s-overlay master init exit: \\$?\"\r\n\r\nsystemctl enable ovn-k8s-watcher\r\nsystemctl start ovn-k8s-watcher\r\n\r\ncd ~/kubernetes-ovn-heterogeneous-cluster/master\r\nkubectl create -f tmp/kubedns-deployment.yaml\r\nkubectl create -f tmp/kubedns-service.yaml\r\n\r\necho \"uploading files to s3\"\r\n\r\necho \\$MASTER_IP \u003e /masterip\r\naws s3 cp /masterip s3://\\$S3_BUCKET/masterip\r\naws s3 cp /etc/kubernetes/tls/ca-key.pem s3://\\$S3_BUCKET/tls/ca-key.pem\r\naws s3 cp /etc/kubernetes/tls/ca.pem s3://\\$S3_BUCKET/tls/ca.pem\r\naws s3 cp /etc/kubernetes/tls/admin-key.pem s3://\\$S3_BUCKET/admin/admin-key.pem\r\naws s3 cp /etc/kubernetes/tls/admin.pem s3://\\$S3_BUCKET/admin/admin.pem\r\naws s3 cp /root/.kube/config s3://\\$S3_BUCKET/admin/config\r\n\r\nenv\r\n\r\necho \"--- north and southbound\"\r\necho \\$$(ovn-sbctl show)\r\necho \\$$(ovn-nbctl show)\r\necho \"---\"\r\n\r\n\r\ncat \u003e /etc/rc.local \u003c\u003cAOL\r\n#!/bin/sh -e\r\n#\r\nexit 0\r\nAOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\nEOL\r\n\r\nchmod 755 /startup.sh\r\n\r\nexport K8S_VERSION=1.7.3\r\nexport S3_BUCKET=${bucket_name}\r\n\r\napt update -y\r\napt-get -y install  python-minimal python-six\r\n\r\ncurl -fsSL https://yum.dockerproject.org/gpg | apt-key add -\r\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e sudo tee /etc/apt/sources.list.d/docker.list\r\n\r\napt update -y\r\necho \"install docker\"\r\napt install -y docker.io dkms\r\n\r\ncd ~\r\ngit clone https://github.com/apprenda/kubernetes-ovn-heterogeneous-cluster\r\ncd kubernetes-ovn-heterogeneous-cluster/deb\r\n\r\ndpkg -i openvswitch-common_2.7.2-1_amd64.deb \\\r\nopenvswitch-datapath-dkms_2.7.2-1_all.deb \\\r\nopenvswitch-switch_2.7.2-1_amd64.deb \\\r\novn-common_2.7.2-1_amd64.deb \\\r\novn-central_2.7.2-1_amd64.deb \\\r\novn-docker_2.7.2-1_amd64.deb \\\r\novn-host_2.7.2-1_amd64.deb \\\r\npython-openvswitch_2.7.2-1_all.deb\r\n\r\necho vport_geneve \u003e\u003e /etc/modules-load.d/modules.conf\r\n\r\ncurl -Lskj -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VERSION/bin/linux/amd64/kubectl\r\nchmod +x /usr/bin/kubectl\r\n\r\napt install -y python-pip\r\npip install --upgrade pip\r\n\r\n\r\napt install awscli -y \r\n\r\ncat \u003e/etc/rc.local \u003c\u003cEOL\r\n#!/bin/sh -e\r\n#\r\nsudo /startup.sh \u003e /var/log/startup.log 2\u003e\u00261\r\nexit 0\r\nEOL\r\n\r\nchmod 755 /etc/rc.local\r\n\r\necho \"rebooting\"\r\nreboot\r\n",
                            "vars.%": "1",
                            "vars.bucket_name": "venus.je-k8s-state"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.userdata-windows-node": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_s3_bucket.bucket"
                    ],
                    "primary": {
                        "id": "ea6bf4ee8db3a7556d632d0954e1a93108edb422c3b85725c41dfae1f397b03d",
                        "attributes": {
                            "id": "ea6bf4ee8db3a7556d632d0954e1a93108edb422c3b85725c41dfae1f397b03d",
                            "rendered": "\u003cpowershell\u003e\r\n$Logfile = \"C:\\userdata.log\"\r\n\r\nFunction LogWrite\r\n{\r\n   Param ([string]$logstring)\r\n\r\n   Add-content $Logfile -value $logstring\r\n}\r\n\r\n$K8S_VERSION=\"1.7.3\"\r\n$K8S_DNS_SERVICE_IP  = \"10.100.0.10\"\r\n$K8S_DNS_DOMAIN = \"cluster.local\"\r\n$SUBNET_PREFIX=\"10.244\"\r\n$CLUSTER_IP_SUBNET=\"$SUBNET_PREFIX.0.0/16\"\r\n$PUBLIC_IP=(Get-NetIPConfiguration | Where-Object {$_.InterfaceAlias -eq \"Ethernet\"}).IPv4Address.IPAddress\r\n$octets = \"$PUBLIC_IP\" -split \"\\.\"\r\n$net=$octets[3]\r\n$SUBNET=\"$SUBNET_PREFIX.$net.0/24\" \r\n$GATEWAY_IP=\"$SUBNET_PREFIX.$net.1\"\r\n\r\nLogWrite \"PUBLIC_IP: $PUBLIC_IP\"\r\nLogWrite \"CLUSTER_IP_SUBNET: $CLUSTER_IP_SUBNET\"\r\nLogWrite \"SUBNET: $SUBNET\"\r\nLogWrite \"GATEWAY_IP: $GATEWAY_IP\"\r\n\r\nSet-ExecutionPolicy -ExecutionPolicy bypass\r\n\r\nLogWrite \"install chocolatey\"\r\niex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\r\n\r\nLogWrite \"install aws cli\" \r\nchoco install awscli -y \r\nchoco install 7zip -y \r\n\r\nLogWrite \"disable firewall\"\r\nSet-NetFirewallProfile -Profile Domain,Public,Private -Enabled False\r\n\r\nmkdir c:\\ovs\r\ncd c:\\ovs\r\n\r\n$start_time = Get-Date\r\nInvoke-WebRequest -Uri \"https://cloudbase.it/downloads/openvswitch-hyperv-2.7.0-certified.msi\" -OutFile \"c:\\ovs\\openvswitch-hyperv-2.7.0-certified.msi\"\r\nLogWrite  \"openvswitch-hyperv-2.7.0-certified.msi Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)\"\r\n\r\n$start_time = Get-Date\r\nInvoke-WebRequest -Uri \"https://cloudbase.it/downloads/k8s_ovn_service_prerelease.zip\" -OutFile \"c:\\ovs\\k8s_ovn_service_prerelease.zip\"\r\nLogWrite  \"k8s_ovn_service_prerelease.zip Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)\"\r\n\r\nInstall-WindowsFeature -Name Containers\r\n\r\nLogWrite \"install open v switch\"\r\n\r\ncd c:\\ovs\r\ncmd /c 'msiexec /i openvswitch-hyperv-2.7.0-certified.msi ADDLOCAL=\"OpenvSwitchCLI,OpenvSwitchDriver,OVNHost\" APPDATADIR=\"c:\\ProgramData\\openvswitch\\run\\openvswitch\" /qn' \r\ndo {\r\n\t$service = Get-WmiObject -Class Win32_Service -Filter \"Name='ovn-controller'\"\r\n\tLogWrite \"Service exitcode: $service.exitcode\"\r\n\tstart-sleep 2\r\n}\r\nuntil ($service.exitcode -eq 0)\r\n\r\n$env:path = $env:path + \";c:\\Program Files\\Cloudbase Solutions\\Open vSwitch\\bin;c:\\kubernetes;C:\\Program Files\\Amazon\\AWSCLI\"\r\n[Environment]::SetEnvironmentVariable(\"Path\",$env:Path,[System.EnvironmentVariableTarget]::Machine)\r\n\r\nLogWrite \"added to path $env:path\"\r\nLogWrite \"installed open v switch\"\r\nLogWrite \"getting master ip address\"\r\n\r\n$S3_BUCKET=\"venus.je-k8s-state\"\r\n\r\nLogWrite \"Download the master api address from venus.je-k8s-state once the master is ready\"\r\ndo {\r\n\t\u0026 \"C:\\Program Files\\Amazon\\AWSCLI\\aws.exe\" s3 cp \"s3://$S3_BUCKET/masterip\" c:\\masterip\t\r\n\t$ECODE = $LASTEXITCODE\r\n\tLogWrite \"failed to download from venus.je-k8s-state $ECODE\"\r\n\tstart-sleep 5\r\n}\r\nuntil ($ECODE -eq 0)\r\n\r\n\u0026 \"C:\\Program Files\\Amazon\\AWSCLI\\aws.exe\" s3 cp \"s3://$S3_BUCKET/files/install_ovn.ps1\" c:\\ovs\\install_ovn.ps1\r\n\u0026 \"C:\\Program Files\\Amazon\\AWSCLI\\aws.exe\" s3 cp \"s3://$S3_BUCKET/files/install_k8s.ps1\" c:\\ovs\\install_k8s.ps1\r\n\r\n$KUBERNETES_API_SERVER=[IO.File]::ReadAllText(\"c:\\masterip\").replace(\"`n\",\"\").replace(\"`r\",\"\")\r\n\r\nLogWrite \"Master API is $KUBERNETES_API_SERVER\"\r\n\r\npowershell -c  .\\install_ovn.ps1 -KUBERNETES_API_SERVER \"'$KUBERNETES_API_SERVER'\" -GATEWAY_IP \"'$GATEWAY_IP'\" -SUBNET \"'$SUBNET'\"  \u003e c:\\ovs\\install_ovn.log 2\u003e\u00261 \r\n\r\npowershell -c  .\\install_k8s.ps1 -KUBERNETES_API_SERVER \"$KUBERNETES_API_SERVER\" -K8S_VERSION \"$K8S_VERSION\" -K8S_DNS_SERVICE_IP \"$K8S_DNS_SERVICE_IP\" -K8S_DNS_DOMAIN \"$K8S_DNS_DOMAIN\"  \u003e c:\\ovs\\install_k8s.log 2\u003e\u00261\r\n\r\n\r\n\u003c/powershell\u003e\r\n\r\n\r\n\r\n\r\n\r\n",
                            "template": "\u003cpowershell\u003e\r\n$Logfile = \"C:\\userdata.log\"\r\n\r\nFunction LogWrite\r\n{\r\n   Param ([string]$logstring)\r\n\r\n   Add-content $Logfile -value $logstring\r\n}\r\n\r\n$K8S_VERSION=\"1.7.3\"\r\n$K8S_DNS_SERVICE_IP  = \"10.100.0.10\"\r\n$K8S_DNS_DOMAIN = \"cluster.local\"\r\n$SUBNET_PREFIX=\"10.244\"\r\n$CLUSTER_IP_SUBNET=\"$SUBNET_PREFIX.0.0/16\"\r\n$PUBLIC_IP=(Get-NetIPConfiguration | Where-Object {$_.InterfaceAlias -eq \"Ethernet\"}).IPv4Address.IPAddress\r\n$octets = \"$PUBLIC_IP\" -split \"\\.\"\r\n$net=$octets[3]\r\n$SUBNET=\"$SUBNET_PREFIX.$net.0/24\" \r\n$GATEWAY_IP=\"$SUBNET_PREFIX.$net.1\"\r\n\r\nLogWrite \"PUBLIC_IP: $PUBLIC_IP\"\r\nLogWrite \"CLUSTER_IP_SUBNET: $CLUSTER_IP_SUBNET\"\r\nLogWrite \"SUBNET: $SUBNET\"\r\nLogWrite \"GATEWAY_IP: $GATEWAY_IP\"\r\n\r\nSet-ExecutionPolicy -ExecutionPolicy bypass\r\n\r\nLogWrite \"install chocolatey\"\r\niex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\r\n\r\nLogWrite \"install aws cli\" \r\nchoco install awscli -y \r\nchoco install 7zip -y \r\n\r\nLogWrite \"disable firewall\"\r\nSet-NetFirewallProfile -Profile Domain,Public,Private -Enabled False\r\n\r\nmkdir c:\\ovs\r\ncd c:\\ovs\r\n\r\n$start_time = Get-Date\r\nInvoke-WebRequest -Uri \"https://cloudbase.it/downloads/openvswitch-hyperv-2.7.0-certified.msi\" -OutFile \"c:\\ovs\\openvswitch-hyperv-2.7.0-certified.msi\"\r\nLogWrite  \"openvswitch-hyperv-2.7.0-certified.msi Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)\"\r\n\r\n$start_time = Get-Date\r\nInvoke-WebRequest -Uri \"https://cloudbase.it/downloads/k8s_ovn_service_prerelease.zip\" -OutFile \"c:\\ovs\\k8s_ovn_service_prerelease.zip\"\r\nLogWrite  \"k8s_ovn_service_prerelease.zip Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)\"\r\n\r\nInstall-WindowsFeature -Name Containers\r\n\r\nLogWrite \"install open v switch\"\r\n\r\ncd c:\\ovs\r\ncmd /c 'msiexec /i openvswitch-hyperv-2.7.0-certified.msi ADDLOCAL=\"OpenvSwitchCLI,OpenvSwitchDriver,OVNHost\" APPDATADIR=\"c:\\ProgramData\\openvswitch\\run\\openvswitch\" /qn' \r\ndo {\r\n\t$service = Get-WmiObject -Class Win32_Service -Filter \"Name='ovn-controller'\"\r\n\tLogWrite \"Service exitcode: $service.exitcode\"\r\n\tstart-sleep 2\r\n}\r\nuntil ($service.exitcode -eq 0)\r\n\r\n$env:path = $env:path + \";c:\\Program Files\\Cloudbase Solutions\\Open vSwitch\\bin;c:\\kubernetes;C:\\Program Files\\Amazon\\AWSCLI\"\r\n[Environment]::SetEnvironmentVariable(\"Path\",$env:Path,[System.EnvironmentVariableTarget]::Machine)\r\n\r\nLogWrite \"added to path $env:path\"\r\nLogWrite \"installed open v switch\"\r\nLogWrite \"getting master ip address\"\r\n\r\n$$S3_BUCKET=\"${bucket_name}\"\r\n\r\nLogWrite \"Download the master api address from ${bucket_name} once the master is ready\"\r\ndo {\r\n\t\u0026 \"C:\\Program Files\\Amazon\\AWSCLI\\aws.exe\" s3 cp \"s3://$S3_BUCKET/masterip\" c:\\masterip\t\r\n\t$ECODE = $LASTEXITCODE\r\n\tLogWrite \"failed to download from ${bucket_name} $ECODE\"\r\n\tstart-sleep 5\r\n}\r\nuntil ($ECODE -eq 0)\r\n\r\n\u0026 \"C:\\Program Files\\Amazon\\AWSCLI\\aws.exe\" s3 cp \"s3://$S3_BUCKET/files/install_ovn.ps1\" c:\\ovs\\install_ovn.ps1\r\n\u0026 \"C:\\Program Files\\Amazon\\AWSCLI\\aws.exe\" s3 cp \"s3://$S3_BUCKET/files/install_k8s.ps1\" c:\\ovs\\install_k8s.ps1\r\n\r\n$KUBERNETES_API_SERVER=[IO.File]::ReadAllText(\"c:\\masterip\").replace(\"`n\",\"\").replace(\"`r\",\"\")\r\n\r\nLogWrite \"Master API is $KUBERNETES_API_SERVER\"\r\n\r\npowershell -c  .\\install_ovn.ps1 -KUBERNETES_API_SERVER \"'$KUBERNETES_API_SERVER'\" -GATEWAY_IP \"'$GATEWAY_IP'\" -SUBNET \"'$SUBNET'\"  \u003e c:\\ovs\\install_ovn.log 2\u003e\u00261 \r\n\r\npowershell -c  .\\install_k8s.ps1 -KUBERNETES_API_SERVER \"$KUBERNETES_API_SERVER\" -K8S_VERSION \"$K8S_VERSION\" -K8S_DNS_SERVICE_IP \"$K8S_DNS_SERVICE_IP\" -K8S_DNS_DOMAIN \"$K8S_DNS_DOMAIN\"  \u003e c:\\ovs\\install_k8s.log 2\u003e\u00261\r\n\r\n\r\n\u003c/powershell\u003e\r\n\r\n\r\n\r\n\r\n\r\n",
                            "vars.%": "1",
                            "vars.bucket_name": "venus.je-k8s-state"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
